{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FinanceContext = createContext(undefined);\nvar mockTransactions = [{\n  id: '1',\n  type: 'expense',\n  category: 'Shopping',\n  amount: 150.00,\n  description: 'Shopping',\n  date: 'April 20',\n  icon: 'shopping-cart'\n}, {\n  id: '2',\n  type: 'expense',\n  category: 'Subscription',\n  amount: 30.00,\n  description: 'Subscription',\n  date: 'April 20',\n  icon: 'calendar'\n}, {\n  id: '3',\n  type: 'income',\n  category: 'Salary',\n  amount: 3000.00,\n  description: 'Salary',\n  date: 'April 20',\n  icon: 'dollar-sign'\n}, {\n  id: '4',\n  type: 'expense',\n  category: 'Dining',\n  amount: 45.00,\n  description: 'Dining',\n  date: 'April 19',\n  icon: 'utensils'\n}];\nexport var FinanceProvider = function FinanceProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(mockTransactions),\n    _useState2 = _slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n  var calculateFinancialData = function calculateFinancialData() {\n    var totalIncome = transactions.filter(function (t) {\n      return t.type === 'income';\n    }).reduce(function (sum, t) {\n      return sum + t.amount;\n    }, 0);\n    var totalExpenses = transactions.filter(function (t) {\n      return t.type === 'expense';\n    }).reduce(function (sum, t) {\n      return sum + t.amount;\n    }, 0);\n    var totalBalance = totalIncome - totalExpenses;\n    return {\n      totalBalance: totalBalance,\n      totalIncome: totalIncome,\n      totalExpenses: totalExpenses,\n      transactions: transactions\n    };\n  };\n  var _useState3 = useState(calculateFinancialData()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    financialData = _useState4[0],\n    setFinancialData = _useState4[1];\n  var addTransaction = function addTransaction(transaction) {\n    var newTransaction = _objectSpread(_objectSpread({}, transaction), {}, {\n      id: Date.now().toString()\n    });\n    var updatedTransactions = [].concat(_toConsumableArray(transactions), [newTransaction]);\n    setTransactions(updatedTransactions);\n    updateBalance();\n  };\n  var updateBalance = function updateBalance() {\n    setFinancialData(calculateFinancialData());\n  };\n  return _jsx(FinanceContext.Provider, {\n    value: {\n      financialData: financialData,\n      addTransaction: addTransaction,\n      updateBalance: updateBalance\n    },\n    children: children\n  });\n};\nexport var useFinance = function useFinance() {\n  var context = useContext(FinanceContext);\n  if (!context) {\n    throw new Error('useFinance must be used within a FinanceProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","FinanceContext","undefined","mockTransactions","id","type","category","amount","description","date","icon","FinanceProvider","_ref","children","_useState","_useState2","_slicedToArray","transactions","setTransactions","calculateFinancialData","totalIncome","filter","t","reduce","sum","totalExpenses","totalBalance","_useState3","_useState4","financialData","setFinancialData","addTransaction","transaction","newTransaction","_objectSpread","Date","now","toString","updatedTransactions","concat","_toConsumableArray","updateBalance","Provider","value","useFinance","context","Error"],"sources":["C:/Users/lucas maeda/Desktop/Tech_Academy_7/context/FinanceContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { Transaction, FinancialData } from '../types';\r\n\r\ninterface FinanceContextType {\r\n  financialData: FinancialData;\r\n  addTransaction: (transaction: Omit<Transaction, 'id'>) => void;\r\n  updateBalance: () => void;\r\n}\r\n\r\nconst FinanceContext = createContext<FinanceContextType | undefined>(undefined);\r\n\r\nconst mockTransactions: Transaction[] = [\r\n  {\r\n    id: '1',\r\n    type: 'expense',\r\n    category: 'Shopping',\r\n    amount: 150.00,\r\n    description: 'Shopping',\r\n    date: 'April 20',\r\n    icon: 'shopping-cart'\r\n  },\r\n  {\r\n    id: '2',\r\n    type: 'expense',\r\n    category: 'Subscription',\r\n    amount: 30.00,\r\n    description: 'Subscription',\r\n    date: 'April 20',\r\n    icon: 'calendar'\r\n  },\r\n  {\r\n    id: '3',\r\n    type: 'income',\r\n    category: 'Salary',\r\n    amount: 3000.00,\r\n    description: 'Salary',\r\n    date: 'April 20',\r\n    icon: 'dollar-sign'\r\n  },\r\n  {\r\n    id: '4',\r\n    type: 'expense',\r\n    category: 'Dining',\r\n    amount: 45.00,\r\n    description: 'Dining',\r\n    date: 'April 19',\r\n    icon: 'utensils'\r\n  }\r\n];\r\n\r\nexport const FinanceProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>(mockTransactions);\r\n\r\n  const calculateFinancialData = (): FinancialData => {\r\n    const totalIncome = transactions\r\n      .filter(t => t.type === 'income')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n    \r\n    const totalExpenses = transactions\r\n      .filter(t => t.type === 'expense')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n    \r\n    const totalBalance = totalIncome - totalExpenses;\r\n\r\n    return {\r\n      totalBalance,\r\n      totalIncome,\r\n      totalExpenses,\r\n      transactions\r\n    };\r\n  };\r\n\r\n  const [financialData, setFinancialData] = useState<FinancialData>(calculateFinancialData());\r\n\r\n  const addTransaction = (transaction: Omit<Transaction, 'id'>) => {\r\n    const newTransaction: Transaction = {\r\n      ...transaction,\r\n      id: Date.now().toString()\r\n    };\r\n    \r\n    const updatedTransactions = [...transactions, newTransaction];\r\n    setTransactions(updatedTransactions);\r\n    updateBalance();\r\n  };\r\n\r\n  const updateBalance = () => {\r\n    setFinancialData(calculateFinancialData());\r\n  };\r\n\r\n  return (\r\n    <FinanceContext.Provider value={{ financialData, addTransaction, updateBalance }}>\r\n      {children}\r\n    </FinanceContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFinance = (): FinanceContextType => {\r\n  const context = useContext(FinanceContext);\r\n  if (!context) {\r\n    throw new Error('useFinance must be used within a FinanceProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}